{"version":3,"sources":["components/Title.js","utils/log.js","components/QTableItem.js","components/AddItem.js","utils/local.js","components/Qtable.js","components/Footer.js","App.js","index.js","assets/avatar/wupa.jpg"],"names":["Title","Component","render","className","src","logo","alt","log","console","bind","TextArea","Input","QTableItem","constructor","props","super","this","valueChange","onDelete","event","value","target","index","onUpdate","listInfo","gutter","span","Item","name","label","id","onChange","placeholder","autoSize","minRows","type","shape","danger","icon","DeleteOutlined","onClick","AddItem","formRef","React","createRef","onClickAdd","values","preId","list","reduce","acc","cur","item","state","title","onAdd","current","resetFields","onInput","setState","labelCol","wrapperCol","onFinish","ref","rules","required","message","PlusOutlined","htmlType","key","localStorage","getItem","setItem","Qtable","clipBoard","text","transfer","document","createElement","body","appendChild","focus","select","execCommand","blur","removeChild","JSON","parse","local","onCopy","onReset","splice","push","map","componentDidMount","table","querySelector","Sortable","onEnd","evt","l","row","oldIndex","newIndex","tailLayout","offset","stringify","i","Footer","href","rel","App","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.90008232.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport logo from '@/assets/avatar/wupa.jpg'\n\nclass Title extends Component {\n    render() {\n        return (\n            <div className=\"title-container\">\n                <span className=\"web-logo\">\n                    <span>乌帕</span>\n                    <img src={logo} alt=\"logo\" />\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default Title\n","const log = console.log.bind(console)\n\nexport default log\n","import React, { Component } from 'react'\r\n\r\nimport { Input, Button, Row, Col, Form } from 'antd'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nconst { TextArea } = Input\r\n\r\nclass QTableItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.valueChange = this.valueChange.bind(this)\r\n        this.onDelete = this.onDelete.bind(this)\r\n    }\r\n    valueChange(event) {\r\n        let value = event.target.value\r\n        let index = this.props.index\r\n        this.props.onUpdate(value, index)\r\n    }\r\n\r\n    onDelete() {\r\n        let index = this.props.index\r\n        this.props.onDelete(index)\r\n    }\r\n\r\n    render() {\r\n        let { listInfo } = this.props\r\n        // log('listInfo', listInfo)\r\n        return (\r\n            <Row gutter={20}>\r\n                <Col span={20}>\r\n                    <Form.Item\r\n                        name={listInfo.label + listInfo.id}\r\n                        label={listInfo.label}\r\n                    >\r\n                        <TextArea\r\n                            value={listInfo.value}\r\n                            onChange={this.valueChange}\r\n                            placeholder={listInfo.label}\r\n                            autoSize={{ minRows: 2 }}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item className=\"handle-item\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            danger\r\n                            icon={<DeleteOutlined />}\r\n                            onClick={this.onDelete}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QTableItem\r\n","import React, { Component } from 'react'\r\nimport log from '@/utils/log'\r\nimport { Button, Col, Form, Input, Row } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\n\r\nclass AddItem extends Component {\r\n    formRef = React.createRef()\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: '',\r\n        }\r\n        this.onInput = this.onInput.bind(this)\r\n    }\r\n    onInput(event) {\r\n        let value = event.target.value\r\n        this.setState({\r\n            title: value,\r\n        })\r\n    }\r\n    onClickAdd = (values) => {\r\n        log('values', values)\r\n        let preId = this.props.list.reduce((acc, cur) => {\r\n            if (typeof cur.id === 'number' && cur.id > acc) {\r\n                acc = cur.id\r\n            }\r\n            return acc\r\n        }, 0)\r\n        let { title } = this.state\r\n        let item = { label: title, value: '', id: preId + 1 }\r\n        this.props.onAdd(item)\r\n        // 重置值为空\r\n        // this.formRef.current.setFieldsValue({ addItem: '' })\r\n        this.formRef.current.resetFields()\r\n    }\r\n\r\n    render() {\r\n        let { title } = this.state\r\n        const layout = {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 20 },\r\n        }\r\n        return (\r\n            <Form\r\n                name=\"id-form-add\"\r\n                {...layout}\r\n                onFinish={this.onClickAdd}\r\n                ref={this.formRef}\r\n            >\r\n                <Row gutter={20}>\r\n                    <Col span={20}>\r\n                        <Form.Item\r\n                            name=\"addItem\"\r\n                            label=\"添加项\"\r\n                            rules={[\r\n                                { required: true, message: '请输入添加项内容' },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                value={title}\r\n                                onChange={this.onInput}\r\n                                placeholder=\"请输入新的提问项\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <Form.Item className=\"handle-item\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                shape=\"circle\"\r\n                                icon={<PlusOutlined />}\r\n                                htmlType=\"submit\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem\r\n","const get = (key) => {\n    return localStorage.getItem(key)\n}\n\nconst set = (key, value) => {\n    localStorage.setItem(key, value)\n}\n\nconst remove = (key) => {\n    localStorage.removeItem(key)\n}\n\nexport default {\n    get,\n    set,\n    remove,\n}\n","import React, { Component } from 'react'\r\nimport { Button, Form, Row, Col, Space } from 'antd'\r\nimport log from '../utils/log'\r\nimport QTableItem from '@/components/QTableItem'\r\nimport AddItem from '@/components/AddItem'\r\n\r\nimport local from '@/utils/local'\r\n\r\nimport '@/styles/Qtable.scss'\r\n\r\n// 使用 sortablejs\r\nimport Sortable from 'sortablejs'\r\n\r\nclass Qtable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let list = JSON.parse(local.get('qTable'))\r\n        if (list) {\r\n            this.state = {\r\n                list: list,\r\n            }\r\n        } else {\r\n            this.state = {\r\n                list: [\r\n                    { label: '标题', value: '', id: 0 },\r\n                    { label: '目的', value: '', id: 1 },\r\n                ],\r\n            }\r\n        }\r\n        this.onUpdate = this.onUpdate.bind(this)\r\n        this.onCopy = this.onCopy.bind(this)\r\n        this.onAdd = this.onAdd.bind(this)\r\n        this.onReset = this.onReset.bind(this)\r\n        this.onDelete = this.onDelete.bind(this)\r\n    }\r\n    // 修改列表项的值\r\n    onUpdate(value, index) {\r\n        let list = this.state.list\r\n        list[index].value = value\r\n        this.setState({\r\n            list: list,\r\n        })\r\n        // 保存到 localstorage\r\n        // local.set('qTable', JSON.stringify(list))\r\n    }\r\n    // 删除一项列表项\r\n    onDelete(index) {\r\n        let list = this.state.list\r\n        list.splice(index, 1)\r\n        this.setState({\r\n            list,\r\n        })\r\n        // 保存到 localstorage\r\n        // local.set('qTable', JSON.stringify(list))\r\n    }\r\n    onAdd(item) {\r\n        let list = this.state.list\r\n        list.push(item)\r\n        this.setState({\r\n            list: list,\r\n        })\r\n    }\r\n\r\n    clipBoard = (text) => {\r\n        let transfer = document.createElement('textarea')\r\n        document.body.appendChild(transfer)\r\n        transfer.value = text\r\n        transfer.focus()\r\n        transfer.select()\r\n        if (document.execCommand('copy')) {\r\n            document.execCommand('copy')\r\n        }\r\n        transfer.blur()\r\n\r\n        document.body.removeChild(transfer)\r\n    }\r\n    // 复制到剪贴板\r\n    onCopy() {\r\n        let list = this.state.list\r\n        let text = list.reduce((acc, cur) => {\r\n            let t = `${cur.label}:\\r\\n    ${cur.value}\\r\\n`\r\n            acc = acc + t\r\n            return acc\r\n        }, '')\r\n\r\n        this.clipBoard(text)\r\n    }\r\n\r\n    // 重置表单\r\n    onReset() {\r\n        let list = this.state.list.map((item) => {\r\n            item.value = ''\r\n            return item\r\n        })\r\n        this.setState({\r\n            list: list,\r\n        })\r\n        // 保存到 localstorage\r\n        // local.set('qTable', JSON.stringify(list))\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 处理\r\n        const table = document.querySelector('#id-form-items')\r\n        new Sortable(table, {\r\n            onEnd: (evt) => {\r\n                // const targetRow = this.list.splice(evt.oldIndex, 1)[0]\r\n                // this.list.splice(evt.newIndex, 0, targetRow)\r\n                let l = this.state.list\r\n                const row = l.splice(evt.oldIndex, 1)[0]\r\n                l.splice(evt.newIndex, 0, row)\r\n                this.setState({\r\n                    list: l,\r\n                })\r\n            },\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { list } = this.state\r\n        // log('list', list)\r\n        const layout = {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 20 },\r\n        }\r\n        const tailLayout = {\r\n            wrapperCol: { offset: 4, span: 20 },\r\n        }\r\n        // 每当 list 发生变化, 就保存到 localStorage 里面\r\n        // 保存到 localstorage\r\n        local.set('qTable', JSON.stringify(list))\r\n\r\n        return (\r\n            <div className=\"qtable-container\">\r\n                <Row>\r\n                    <Col span={20} offset={4}>\r\n                        <h3>提问表格</h3>\r\n                    </Col>\r\n                </Row>\r\n                <AddItem onAdd={this.onAdd} list={list} />\r\n                <Form name=\"id-form-table\" {...layout} onFinish={this.onCopy}>\r\n                    {/*<Form.Item name=\"addItem\" label=\"添加项\">*/}\r\n                    {/*    <AddItem onAdd={this.onAdd} />*/}\r\n                    {/*</Form.Item>*/}\r\n                    <div id=\"id-form-items\">\r\n                        {list.map((item, i) => (\r\n                            <QTableItem\r\n                                listInfo={item}\r\n                                index={i}\r\n                                onUpdate={this.onUpdate}\r\n                                onDelete={this.onDelete}\r\n                                key={item.id}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Space>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                复制到剪贴板\r\n                            </Button>\r\n                            <Button onClick={this.onReset}>重置</Button>\r\n                        </Space>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Qtable\r\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"copyright\">\n                    <a\n                        href=\"http://www.beian.miit.gov.cn/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        浙ICP备20016375号-1\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nimport Title from '@/components/Title'\nimport Qtable from '@/components/Qtable'\nimport Footer from '@/components/Footer'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Title />\n                <Qtable />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n// ant-design\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/wupa.12945ff3.jpg\";"],"sourceRoot":""}